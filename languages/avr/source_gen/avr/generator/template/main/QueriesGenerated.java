package avr.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.Sequence;
import com.mbeddr.core.buildconfig.behavior.Binary_Behavior;
import com.mbeddr.core.buildconfig.behavior.LibraryRef_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import com.mbeddr.core.buildconfig.behavior.Linkable_Behavior;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.generator.template.TemplateQueryContext;
import com.mbeddr.core.buildconfig.behavior.BCHelper;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class QueriesGenerated {
  public static Object propertyMacro_GetPropertyValue_5046689135693953173(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "$(OBJ_" + SPropertyOperations.getString(_context.getNode(), "name") + ")";
  }

  public static Object propertyMacro_GetPropertyValue_5275554368891504931(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String result = "";
    for (SNode od : Sequence.fromIterable(Binary_Behavior.call_referencedObjDescriptors_5275554368891447099(_context.getNode()))) {
      result += SPropertyOperations.getString(od, "path") + " ";
    }
    return result;
  }

  public static Object propertyMacro_GetPropertyValue_2671893947946336387(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "-L" + LibraryRef_Behavior.call_pathToLib_1553713790141389241(_context.getNode()) + " -l" + SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "lib", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_4809476668198808423(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String result = "";
    if (isNotEmpty_x583g4_a0b0d(SPropertyOperations.getString(_context.getNode(), "path"))) {
      result += "-L" + Linkable_Behavior.call_pathToLinkable_4809476668198808256(_context.getNode()) + " ";
    }
    result += "-l" + SPropertyOperations.getString(_context.getNode(), "name");
    return result;
  }

  public static Object propertyMacro_GetPropertyValue_7717755763392622502(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Iterable sourceNodesQuery_2671893947946336372(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "referencedLibs", true);
  }

  public static Iterable sourceNodesQuery_4809476668198808416(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "linkables", true);
  }

  public static boolean mappingConfiguration_Condition_440773076688628146(final IOperationContext operationContext, final TemplateQueryContext _context) {
    SNode bc = BCHelper.findBC(_context.getInputModel(), _context, "avr/main.arduino_uno");
    if (SLinkOperations.getTarget(bc, "target", true) == null) {
      return false;
    }
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(bc, "target", true), "avr.structure.Arduino_Uno");
  }

  public static boolean isNotEmpty_x583g4_a0b0d(String str) {
    return str != null && str.length() > 0;
  }
}
